// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int           @id @default(autoincrement())
  username      String        @unique
  password      String
  code          String?
  roleId        Int?          @map("role_id")
  role          Role?         @relation(fields: [roleId], references: [id])
  auth_code     String?
  virtualToken  String?       @map("virutal_token")
  registrationSource  String?       @map("registration_source")
  lastLogin     String?       @map("last_login")
  status        Int           @default(1)

  createdAt     DateTime      @default(now()) @map("created_at")
  updatedAt     DateTime      @updatedAt @map("updated_at")
  userDetails   UserDetails?
  bettingParams UserBettingParameter[]
  userSetting   UserSetting?

  client        Client      @relation(fields: [clientId], references: [id], onDelete: Cascade)
  clientId      Int

  @@map("users")
}

model UserDetails {
  id        Int       @id @default(autoincrement())
  firstName String?
  lastName  String?
  email     String?   
  city      String?
  country   String?
  state     String?
  address   String?
  gender    String?
  currency  String?
  phone     String?
  date_of_birth String?
  language  String?
  userId    Int      @unique @map("user_id")
  user      User     @relation(fields: [userId], references: [id])
  
  createdAt      DateTime   @default(now()) @map("created_at")
  updatedAt      DateTime   @updatedAt @map("updated_at")

  @@map("user_details")
}

model Client {
  id            Int      @id @default(autoincrement())
  name          String
  country       String
  currency      String
  website       String?
  contactNumber String?
  contactEmail  String
  createdAt     DateTime   @default(now()) @map("created_at")
  updatedAt     DateTime   @updatedAt @map("updated_at")

  users         User[]

  @@map("clients")
}

model Setting {
  id        Int       @id @default(autoincrement())
  option    String
  value     String
  category  String
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")

  @@map("settings")
}

model Role {
  id               Int               @id @default(autoincrement())
  name             String            @unique
  description      String
  type             String?
  user             User[]
  role_permissions RolePermission[]
  createdAt        DateTime   @default(now()) @map("created_at")
  updatedAt        DateTime   @updatedAt @map("updated_at")

  @@map("roles")
}

model Permission {
  id               Int               @id @default(autoincrement())
  name             String
  description      String
  createdAt      DateTime   @default(now()) @map("created_at")
  updatedAt      DateTime   @updatedAt @map("updated_at")

  @@map("permissions")
}

model RolePermission {
  id           Int         @id @default(autoincrement())
  roleID       Int         @map("role_id")
  role         Role?       @relation(fields: [roleID], references: [id])
  permissionID Int
  createdAt    DateTime    @default(now())

  @@map("role_permissions")
}

model UserBettingParameter {
  id          Int           @id @default(autoincrement())
  userId      Int           @map("user_id")
  user        User          @relation(fields: [userId], references: [id])
  period      String        @default("period")
  maxPayout   Float         @map("max_payout") @default(0)
  singleMaxOddLength Float  @map("singleMaxOddLength") @default(100)
  combiMaxOddLength Float   @map("combi_max_odd_length") @default(1000000)
  minTicketSize Int?        @map("min_ticket_size") @default(1)
  maxTicketSize Int?        @map("max_ticket_size") @default(40)
  singleMinStake Float      @map("single_min_stake") @default(100)
  singleMaxStake Float      @map("single_max_stake") @default(10000)
  combiMinStake Float       @map("combi_min_stake") @default(100)
  combiMaxStake Float       @map("combi_max_stake") @default(10000)
  maxCancelTime Int?        @map("max_cancel_time") @default(300)
  dailyCancelLimit Int?     @map("daily_cancel_limit") @default(5)
  holdBets      Float       @map("hold_bets") @default(100000)
  createdAt      DateTime   @default(now()) @map("created_at")
  updatedAt      DateTime   @updatedAt @map("updated_at")

  @@map("user_betting_parameters")
}

model UserSetting {
  id                  Int           @id @default(autoincrement())
  userId              Int           @map("user_id") @unique
  user                User          @relation(fields: [userId], references: [id])
  dailyDepositLimit   Float?        @map("daily_deposit_limit")
  weeklyDepositLimit  Float?        @map("weekly_deposit_limit")
  monthlyDepositLimit Float?        @map("monthly_deposit_limit")
  selfExclusionPeriod String?       @map("self_exclusion_period")
  excludeFrom         String?       @map("exclude_from")
  emailCommunication  Int?          @map("email_communication") @default(1)
  smsCommunication    Int?          @map("sms_communication") @default(1)
  promotionalPopUp    Int?          @map("promotional_pop_up") @default(1)

  createdAt      DateTime     @default(now()) @map("created_at")
  updatedAt      DateTime     @updatedAt @map("updated_at")

  @@map("user_settings")
}
